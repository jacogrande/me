{"version":3,"sources":["Nav.tsx","Audio.tsx","Music.tsx","Header.tsx","Entries/entries.ts","Entries/BarcodeDevLog.tsx","Journal.tsx","ResumeComponents/Encryptor.tsx","ResumeComponents/Pie.tsx","ResumeComponents/FB.tsx","ResumeComponents/Aesap.tsx","ResumeComponents/Pokemon.tsx","ResumeComponents/Hashbrowns.tsx","ResumeComponents/KTM.tsx","ResumeComponents/Barcode.tsx","ResumeComponents/Intake.tsx","Resume.tsx","Connect.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Nav","className","to","customIcons","play","fontSize","pause","forward","rewind","Audio","props","src","process","progressJumpStep","header","footer","year","eventHorizonTunes","main_theme","title","story","firstGlimpse","drifters","intoTheMaw","starbound","traitors","theJump","createHeader","tune","Music","React","useState","selection","setSelection","eventHorizonArt","id","artInc","mixedEventHorizonComponents","Object","keys","map","key","i","Fragment","eventHorizonComponents","otherComponents","name","content","onClick","Header","anchorEl","setAnchorEl","handleClose","useLocation","pathname","alt","activeClassName","IconButton","aria-label","aria-controls","aria-haspopup","e","currentTarget","keepMounted","open","Boolean","onClose","MenuItem","devLogEntries","description","photoPath","photoAlt","href","BarcodeDevLog","Journal","section","setSection","useParams","category","entry","find","movie","devLogSection","Encryptor","Tooltip","Pie","FB","Aesap","Pokemon","Hashbrowns","KTM","Barcode","Intake","resumeData","image","location","Resume","project","getProject","node","from","borderColor","delay","Connect","width","height","style","color","App","basename","path","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sTAeeA,G,MAXH,WACV,OACE,yBAAKC,UAAU,YACb,kBAAC,IAAD,CAASC,GAAG,UAAUD,UAAU,yBAAhC,UACA,kBAAC,IAAD,CAASC,GAAG,SAASD,UAAU,yBAA/B,SACA,kBAAC,IAAD,CAASC,GAAG,WAAWD,UAAU,yBAAjC,WACA,kBAAC,IAAD,CAASC,GAAG,WAAWD,UAAU,YAAjC,c,uHCAAE,G,OAAc,CAClBC,KAAM,kBAAC,IAAD,CAAsBH,UAAU,eAAeI,SAAS,UAC9DC,MAAO,kBAAC,IAAD,CAAuBL,UAAU,eAAeI,SAAS,UAChEE,QAAS,kBAAC,IAAD,CAAeN,UAAU,eAAeI,SAAS,UAC1DG,OAAQ,kBAAC,IAAD,CAAcP,UAAU,eAAeI,SAAS,YAsB3CI,EAbD,SAACC,GACb,OACE,kBAAC,IAAD,CACEC,IAAKC,MAAyBF,EAAMC,IACpCR,YAAaA,EACbF,UAAU,eACVY,iBAAkB,IAClBC,OAAQJ,EAAMI,OACdC,OAAQ,uBAAGd,UAAU,uBAAb,oBAAqDS,EAAMM,KAA3D,QCrBRC,EAA4B,CAChCC,WAAY,CACVC,MAAO,aAGPC,MAAM,kDACNT,IAAK,uBACLK,KAAM,MAERK,aAAc,CACZF,MAAO,gBACPC,MACE,iMACFT,IAAK,0BACLK,KAAM,MAERM,SAAU,CACRH,MAAO,WACPC,MACE,oKACFT,IAAK,sBACLK,KAAM,MAGRO,WAAY,CACVJ,MAAO,kBACPC,MACE,mLACFT,IAAK,wBACLK,KAAM,MAERQ,UAAW,CACTL,MAAO,YACPC,MAAO,OACPT,IAAK,uBACLK,KAAM,MAERS,SAAU,CACRN,MAAO,WACPC,MAAO,OACPT,IAAK,sBACLK,KAAM,MAERU,QAAS,CACPP,MAAO,gBACPC,MAAO,OACPT,IAAK,qBACLK,KAAM,OAIJW,EAAe,SAACC,GACpB,OACE,oCACE,4BAAKA,EAAKT,OAEV,uBAAGlB,UAAU,2CAwGJ4B,EAnGD,WAAO,IAAD,EACgBC,IAAMC,SACtC,iBAFgB,mBACXC,EADW,KACAC,EADA,KAKZC,EAAkB,CACtB,yBACEC,GAAG,YACHlC,UAAyB,kBAAd+B,EAAgC,gBAAkB,WAC7DrB,IAAKC,0BAEP,yBACEX,UAAyB,kBAAd+B,EAAgC,eAAiB,WAC5DG,GAAG,SACHxB,IAAKC,uBAEP,yBACEX,UAAyB,kBAAd+B,EAAgC,UAAY,WACvDG,GAAG,OACHxB,IAAKC,qBAEP,yBACEX,UAAyB,kBAAd+B,EAAgC,eAAiB,WAC5DG,GAAG,aACHxB,IAAKC,4BAILwB,GAAU,EACRC,EAA8BC,OAAOC,KAAKtB,GAAmBuB,KACjE,SAACC,EAAKC,GACJ,OAAIA,EAAI,GAAK,GACXN,IAEE,kBAAC,IAAMO,SAAP,CAAgBF,IAAKC,GACnB,kBAAC,EAAD,CACE5B,OAAQa,EAAaV,EAAkBwB,IACvCzB,KAAMC,EAAkBwB,GAAKzB,KAC7BL,IAAKC,MAAyBK,EAAkBwB,GAAK9B,MAEtDuB,EAAgBE,KAKrB,kBAAC,EAAD,CACEtB,OAAQa,EAAaV,EAAkBwB,IACvCzB,KAAMC,EAAkBwB,GAAKzB,KAC7BL,IAAKC,MAAyBK,EAAkBwB,GAAK9B,IACrD8B,IAAKC,OAMPE,EACJ,yBAAK3C,UAAU,qBAAqBoC,GAGhCQ,EACJ,uBAAG5C,UAAU,WAAb,qCAGF,OACE,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,0DACA,0BAAM6C,KAAK,cAAcC,QAAQ,iCAEnC,qCACA,yBAAK9C,UAAU,gBACb,4BACEA,UAAS,4CACO,kBAAd+B,GAAiC,eAEnCgB,QAAS,kBAAMf,EAAa,mBAJ9B,iBAQA,4BACEhC,UAAS,yCACO,UAAd+B,GAAyB,eAE3BgB,QAAS,kBAAMf,EAAa,WAJ9B,UAUa,kBAAdD,EAAgCY,EAAyBC,EAC1D,gCACiB,kBAAdb,GACC,uBAAG/B,UAAU,iBAAb,2B,gHC7DKgD,EA1FA,WAAO,IAAD,EACanB,IAAMC,SAA6B,MADhD,mBACZmB,EADY,KACFC,EADE,KAGbC,EAAc,WAClBD,EAAY,OAKd,MAA2B,MAFVE,cAEHC,SACL,qCAGL,yBAAKrD,UAAU,UACb,kBAAC,IAAD,CAASC,GAAG,KACV,yBAAKS,IAAKC,eAAsCuB,GAAG,aAAaoB,IAAI,0BAEtE,yBAAKtD,UAAU,cAAckC,GAAG,aAC9B,kBAAC,IAAD,CACEjC,GAAG,UACHD,UAAU,wBACVuD,gBAAgB,eAHlB,UAOA,kBAAC,IAAD,CACEtD,GAAG,SACHD,UAAU,wBACVuD,gBAAgB,eAHlB,SAOA,kBAAC,IAAD,CACEtD,GAAG,WACHD,UAAU,wBACVuD,gBAAgB,eAHlB,WAOA,kBAAC,IAAD,CACEtD,GAAG,WACHD,UAAU,WACVuD,gBAAgB,eAHlB,YAQF,yBAAKvD,UAAU,cAAckC,GAAG,aAC9B,kBAACsB,EAAA,EAAD,CACEC,aAAW,sBACXC,gBAAc,aACdC,gBAAc,OACdZ,QAAS,SAACa,GAAD,OAAOV,EAAYU,EAAEC,iBAE9B,kBAAC,IAAD,CAAUzD,SAAS,WAErB,kBAAC,IAAD,CACE8B,GAAG,aACHe,SAAUA,EACVa,aAAW,EACXC,KAAMC,QAAQf,GACdgB,QAASd,GAET,kBAAC,IAAD,CAASJ,QAASI,EAAalD,GAAG,UAAUD,UAAU,YACpD,kBAACkE,EAAA,EAAD,KACE,kBAAC,IAAD,CAAUlE,UAAU,uBADtB,YAIF,kBAAC,IAAD,CAAS+C,QAASI,EAAalD,GAAG,SAASD,UAAU,YACnD,kBAACkE,EAAA,EAAD,KACE,kBAAC,IAAD,CAAelE,UAAU,uBAD3B,WAIF,kBAAC,IAAD,CAAS+C,QAASI,EAAalD,GAAG,WAAWD,UAAU,YACrD,kBAACkE,EAAA,EAAD,KACE,kBAAC,IAAD,CAAiBlE,UAAU,uBAD7B,aAIF,kBAAC,IAAD,CAAS+C,QAASI,EAAalD,GAAG,WAAWD,UAAU,YACrD,kBAACkE,EAAA,EAAD,KACE,kBAAC,IAAD,CAAYlE,UAAU,kBADxB,iBChFDmE,G,OAA0B,CACrC,CACEjD,MAAO,0BACPkD,YAAa,2EACbC,UAAW1D,yBACX2D,SAAU,wEACVxB,QCdkB,WACpB,OACE,yBAAK9C,UAAU,aACb,uBAAGA,UAAU,wBAAb,kBACkB,IAChB,uBACEuE,KAAK,4EACLvE,UAAU,QAFZ,qCAIoC,qCAJpC,6CAFF,4LAaA,uBAAGA,UAAU,wBAAb,iNAGuE,IACrE,uBACEuE,KAAK,sGACLvE,UAAU,QAFZ,gBAKK,IATP,+eAmBA,uBAAGA,UAAU,wBAAb,unBASuE,IACrE,uBACEuE,KAAK,wEACLvE,UAAU,QAFZ,8BAVF,yGAiBiC,IAC/B,uBACEuE,KAAK,mDACLvE,UAAU,QAFZ,sBAKK,IAvBP,8FAyBoB,iCAzBpB,8EA0BoC,IAClC,uBACEuE,KAAK,gDACLvE,UAAU,QAFZ,mBA3BF,IAgCQ,IAhCR,UAiCS,iCAjCT,2FAoCA,uBAAGA,UAAU,wBAAb,uHAEqD,iCAFrD,ywBAcU,IACR,kBAAC,IAAD,CAASC,GAAG,kBAAkBD,UAAU,QAAxC,QAfF,MDzDOwE,GACTtC,GAAI,QEqDOuC,EA/DC,WAAO,IAAD,EACU5C,IAAMC,SAA6B,UAD7C,mBACb4C,EADa,KACJC,EADI,OAGKC,cAAjBC,EAHY,EAGZA,SAAU3C,EAHE,EAGFA,GAElB,GAAI2C,GAAY3C,EAAI,CAClB,IAAM4C,EAAQX,EAAcY,MAAK,SAACC,GAAD,OAAWA,EAAM9C,KAAOA,KACzD,OACE,yBAAKlC,UAAU,aACb,yBAAKU,IAAKC,OAAA,OAAyBmE,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAOT,WAAWrE,UAAU,SAASsD,IAAG,OAAEwB,QAAF,IAAEA,OAAF,EAAEA,EAAOR,WACpF,mCAAKQ,QAAL,IAAKA,OAAL,EAAKA,EAAO5D,OACZ,uBAAGlB,UAAU,iBAAb,OAA8B8E,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAOV,aACrC,oCAAMU,QAAN,IAAMA,OAAN,EAAMA,EAAOhC,UAKnB,IAAMmC,EACJ,yBAAKjF,UAAU,oBACZmE,EAAc5B,KAAI,SAACuC,GAAD,OACjB,kBAAC,IAAD,CAAS7E,GAAE,0BAAqB6E,EAAM5C,IAAMlC,UAAU,YAAYwC,IAAKsC,EAAM5D,OAC3E,yBAAKR,IAAKC,MAAyBmE,EAAMT,UAAWrE,UAAU,cAAcsD,IAAKwB,EAAM5D,QACvF,wBAAIlB,UAAU,eAAe8E,EAAM5D,OACnC,uBAAGlB,UAAU,mCAAmC8E,EAAMV,kBAM9D,OACE,yBAAKpE,UAAU,aACb,kBAAC,IAAD,KACE,4DACA,0BAAM6C,KAAK,cAAcC,QAAQ,8DAEnC,uCACA,yBAAK9C,UAAU,gBACb,4BACEA,UAAS,4CACK,WAAZ0E,GAAwB,eAE1B3B,QAAS,kBAAM4B,EAAW,YAJ5B,WAQA,4BACE3E,UAAS,yCACK,UAAZ0E,GAAuB,eAEzB3B,QAAS,kBAAM4B,EAAW,WAJ5B,UASW,WAAZD,EACCO,EAEA,uBAAGjF,UAAU,WAAb,sC,2CCPOkF,EArDG,WAChB,OACE,yBAAKlF,UAAU,aACb,kBAACmF,EAAA,EAAD,CAASjE,MAAM,0BACb,kBAAC,IAAD,CAASjB,GAAG,UAAUD,UAAU,QAC9B,kBAACwD,EAAA,EAAD,KACE,kBAAC,IAAD,SAIN,yCAEA,uBAAGxD,UAAU,yBAAb,gBACA,uBAAGA,UAAU,iCAAb,sJAGM,IACJ,uBACEuE,KAAK,2EACLvE,UAAU,QAFZ,qBAIqB,KARvB,gEAYA,uBAAGA,UAAU,sBAAb,kRAMA,uBAAGA,UAAU,sBAAb,kaAM+D,IAC7D,uBACEuE,KAAK,0NACLvE,UAAU,QAFZ,cAKK,IAZP,iBAeA,yBAAKA,UAAU,oBACb,4BAAQU,IAAI,yDCWL0E,EA1DH,kBACV,yBAAKpF,UAAU,aACb,kBAACmF,EAAA,EAAD,CAASjE,MAAM,0BACb,kBAAC,IAAD,CAASjB,GAAG,UAAUD,UAAU,QAC9B,kBAACwD,EAAA,EAAD,KACE,kBAAC,IAAD,SAIN,4CACA,uBAAGxD,UAAU,yBAAb,QACA,uBAAGA,UAAU,iCAAb,iHAE8C,IAC5C,uBAAGuE,KAAK,iCAAiCvE,UAAU,QAAnD,eACe,KACV,IALP,6EAM6E,IAN7E,2RAYA,uBAAGA,UAAU,sBAAb,mfASA,uBAAGA,UAAU,sBAAb,+zBAcA,uBAAGA,UAAU,sBAAb,6bCbWqF,EAjCJ,kBACT,yBAAKrF,UAAU,aACb,kBAACmF,EAAA,EAAD,CAASjE,MAAM,0BACb,kBAAC,IAAD,CAASjB,GAAG,UAAUD,UAAU,QAC9B,kBAACwD,EAAA,EAAD,KACE,kBAAC,IAAD,SAIN,0CACA,uBAAGxD,UAAU,yBAAb,gBACA,uBAAGA,UAAU,iCAAb,wWAOA,uBAAGA,UAAU,sBAAb,8pBCUWsF,EA5BD,kBACZ,yBAAKtF,UAAU,aACb,kBAACmF,EAAA,EAAD,CAASjE,MAAM,0BACb,kBAAC,IAAD,CAASjB,GAAG,UAAUD,UAAU,QAC9B,kBAACwD,EAAA,EAAD,KACE,kBAAC,IAAD,SAIN,qCACA,uBAAGxD,UAAU,yBAAb,gBACA,uBAAGA,UAAU,iCAAb,8PAMA,uBAAGA,UAAU,sBAAb,8aCsEWuF,GAvFC,kBACd,yBAAKvF,UAAU,aACb,kBAACmF,EAAA,EAAD,CAASjE,MAAM,0BACb,kBAAC,IAAD,CAASjB,GAAG,UAAUD,UAAU,QAC9B,kBAACwD,EAAA,EAAD,KACE,kBAAC,IAAD,SAIN,8CACA,uBAAGxD,UAAU,yBAAb,gBACA,uBAAGA,UAAU,iCAAb,yMAGmD,IACjD,uBACEuE,KAAK,sEACLvE,UAAU,QAFZ,UAJF,yIAaA,uBAAGA,UAAU,sBAAb,ggBASA,yBACEU,IAAKC,6BACLX,UAAU,gBACVsD,IAAI,qCAEN,uBAAGtD,UAAU,iCAAb,wJAE6E,IAC3E,uBAAGuE,KAAK,6CAA6CvE,UAAU,QAA/D,SAHF,4DAQA,yBACEU,IAAKC,kCACLX,UAAU,gBACVsD,IAAI,iCAEN,uBAAGtD,UAAU,iCAAb,2WAQA,yBACEU,IAAKC,kCACLX,UAAU,gBACVsD,IAAI,oDAEN,uBAAGtD,UAAU,iCAAb,uIAIA,yBACEU,IAAKC,8BACLX,UAAU,gBACVsD,IAAI,6BAEN,uBAAGtD,UAAU,iCAAb,knBCzCWwF,GAhCI,kBACjB,yBAAKxF,UAAU,aACb,kBAACmF,EAAA,EAAD,CAASjE,MAAM,0BACb,kBAAC,IAAD,CAASjB,GAAG,UAAUD,UAAU,QAC9B,kBAACwD,EAAA,EAAD,KACE,kBAAC,IAAD,SAIN,0CACA,uBAAGxD,UAAU,yBAAb,gBACA,uBAAGA,UAAU,iCAAb,0EAC0E,IACxE,uBACEuE,KAAK,wEACLvE,UAAU,QAFZ,qBAIqB,KAChB,IAPP,8NASqJ,IACnJ,uBACEuE,KAAK,uDACLvE,UAAU,QAFZ,cAVF,6GCyCWyF,GApDH,kBACV,yBAAKzF,UAAU,aACb,kBAACmF,EAAA,EAAD,CAASjE,MAAM,0BACb,kBAAC,IAAD,CAASjB,GAAG,UAAUD,UAAU,QAC9B,kBAACwD,EAAA,EAAD,KACE,kBAAC,IAAD,SAIN,mDACA,uBAAGxD,UAAU,yBAAb,gBACA,uBAAGA,UAAU,iCAAb,kZAQA,uBAAGA,UAAU,sBAAb,oXAQA,yBACEU,IAAKC,8BACLX,UAAU,gBACVsD,IAAI,iDAEN,yBACE5C,IAAKC,sBACLX,UAAU,gBACVsD,IAAI,gDAEN,uBAAGtD,UAAU,iCAAb,+TAOA,yBACEU,IAAKC,4BACLX,UAAU,gBACVsD,IAAI,iDCoCKoC,GAnFC,kBACd,yBAAK1F,UAAU,aACb,kBAACmF,EAAA,EAAD,CAASjE,MAAM,0BACb,kBAAC,IAAD,CAASjB,GAAG,UAAUD,UAAU,QAC9B,kBAACwD,EAAA,EAAD,KACE,kBAAC,IAAD,SAIN,uCAEA,uBAAGxD,UAAU,yBAAb,gBACA,uBAAGA,UAAU,iCAAb,kDAGA,yBACEU,IAAI,4EACJV,UAAU,kBAEZ,uBAAGA,UAAU,iCAAb,iEACiE,IAC/D,qCAFF,uRAQA,uBAAGA,UAAU,sBAAb,4GAEmC,IACjC,uBACEuE,KAAK,mDACLvE,UAAU,QAFZ,sBAKK,IARP,kHAUyC,IACvC,kBAAC,IAAD,CAASC,GAAG,qBAAqBD,UAAU,QAA3C,QAXF,6EAgBA,yBACEU,IAAKC,yBACLX,UAAU,kBACVsD,IAAI,6BAEN,uBAAGtD,UAAU,uBAAb,8EAGA,yBACEU,IAAKC,qCACLX,UAAU,kBACVsD,IAAI,yBAEN,uBAAGtD,UAAU,uBAAb,qDAGA,yBACEU,IAAKC,mCACLX,UAAU,kBACVsD,IAAI,kCAEN,yBACE5C,IAAKC,uCACLX,UAAU,kBACVsD,IAAI,+CAEN,uBAAGtD,UAAU,uBAAb,sDAGA,yBACEU,IAAKC,sCACLX,UAAU,kBACVsD,IAAI,+BAEN,uBAAGtD,UAAU,uBAAb,gEC5BW2F,GAjDA,kBACb,yBAAK3F,UAAU,aACb,kBAACmF,EAAA,EAAD,CAASjE,MAAM,0BACb,kBAAC,IAAD,CAASjB,GAAG,UAAUD,UAAU,QAC9B,kBAACwD,EAAA,EAAD,KACE,kBAAC,IAAD,SAIN,sCAEA,uBAAGxD,UAAU,yBAAb,gBACA,uBAAGA,UAAU,iCAAb,0iBAUA,uBAAGA,UAAU,sBAAb,ohBAUA,uBAAGA,UAAU,sBAAb,qlBASyB,IACvB,uBAAGuE,KAAK,2BAA2BvE,UAAU,QAA7C,mBCxBA4F,GAA4B,CAChC,CACE1E,MAAO,mBACPkD,YAAa,+BACbyB,MAAO,wBACPC,SAAU,OACVvB,KAAM,qBAER,CACErD,MACE,2GACF4E,SAAU,UAEZ,CACE5E,MAAO,sBACPkD,YAAa,yDACbyB,MAAO,kBACPC,SAAU,QACVvB,KAAM,eAER,CACErD,MACE,gHACF4E,SAAU,UAEZ,CACE5E,MAAO,oBACPkD,YACE,4EACFyB,MAAO,iBACPC,SAAU,OACVvB,KAAM,cAER,CACErD,MAAO,eACPkD,YAAa,qBACbyB,MAAO,oBACPC,SAAU,SACVvB,KAAM,iBAER,CACErD,MAAO,wBACPkD,YAAa,gCACbyB,MAAO,sBACPC,SAAU,QACVvB,KAAM,mBAER,CACErD,MAAO,oBACPkD,YAAa,iCACbyB,MAAO,yBACPC,SAAU,SACVvB,KAAM,sBAER,CACErD,MACE,mJACF4E,SAAU,QAEZ,CACE5E,MAAO,6BACPkD,YAAa,sDACbyB,MAAO,kBACPC,SAAU,SACVvB,KAAM,eAER,CACErD,MAAO,iBACPkD,YACE,iEACFyB,MAAO,sBACPC,SAAU,QACVvB,KAAM,mBAER,CACErD,MAAO,gBACPkD,YAAa,6CACbyB,MAAO,qBACPC,SAAU,SACVvB,KAAM,mBAgFKwB,GA5EA,WAAO,IACZC,EAAYpB,cAAZoB,QAyBR,OAAIA,EACF,oCACE,kBAAC,IAAD,KACE,+BAAQA,EAAR,sBACA,0BAAMnD,KAAK,cAAcC,QAAQ,mCA3BpB,WACjB,OAAQkD,GACN,IAAK,YACH,OAAO,kBAAC,EAAD,MACT,IAAK,MACH,OAAO,kBAAC,EAAD,MACT,IAAK,KACH,OAAO,kBAAC,EAAD,MACT,IAAK,QACH,OAAO,kBAAC,EAAD,MACT,IAAK,UACH,OAAO,kBAAC,GAAD,MACT,IAAK,aACH,OAAO,kBAAC,GAAD,MACT,IAAK,MACH,OAAO,kBAAC,GAAD,MACT,IAAK,UACH,OAAO,kBAAC,GAAD,MACT,IAAK,SACH,OAAO,kBAAC,GAAD,OAURC,IAMH,yBAAKjG,UAAU,aACb,kBAAC,IAAD,KACE,2DACA,0BAAM6C,KAAK,cAAcC,QAAQ,+BAEnC,8CACC8C,GAAWrD,KAAI,SAAC2D,EAAMzD,GAAP,OACd,yBAAKzC,UAAWkG,EAAKJ,SAAUtD,IAAK0D,EAAKhF,OACtCgF,EAAK9B,YACJ,yBAAKpE,UAAU,kBACb,kBAAC,IAAD,CAASC,GAAIiG,EAAK3B,MAChB,yBAAKvE,UAAS,mBAAcyC,IAC1B,yBAAK/B,IAAKC,MAAyBuF,EAAKL,MAAOvC,IAAK4C,EAAKhF,UAG7D,uBAAGlB,UAAU,oBAAoBkG,EAAKhF,OACtC,uBAAGlB,UAAU,yBAAyBkG,EAAK9B,cAG7C,yBAAKpE,UAAS,6BAAwByC,IACpC,2BAAIyD,EAAKhF,QAGZuB,EAAI,GACH,kBAAC,IAAD,CACE0D,KAAI,cAAS1D,EAAI,GACjBxC,GAAE,cAASwC,GACX2D,YAAY,UACZC,MAAO,EACPrG,UAAU,gB,6BC9FTsG,GAtEC,WACd,OACE,yBAAKtG,UAAU,aACb,kBAAC,IAAD,KACE,4DACA,0BAAM6C,KAAK,cAAcC,QAAQ,6EAEnC,uCACA,uBAAG9C,UAAU,sBAAb,WACU,8CADV,wPAMA,uBAAGA,UAAU,sBACX,+CADF,4QAKa,IACX,kBAAC,IAAD,CAASA,UAAU,OAAOC,GAAG,WAA7B,QANF,mFAYA,uBAAGD,UAAU,sBACX,qCADF,0RAOA,yBAAKA,UAAU,kBACb,uBAAGA,UAAU,eACX,kBAAC,KAAD,CAAUA,UAAU,SADtB,4BAIA,6BACE,kBAACmF,EAAA,EAAD,CAASjE,MAAM,aACb,uBACEqD,KAAK,gCACLd,aAAW,qBAEX,yBACE/C,IAAKC,iBACLX,UAAU,6BACVuG,MAAO,GACPC,OAAQ,GACRlD,IAAI,kBAIV,kBAAC6B,EAAA,EAAD,CAASjE,MAAM,eACb,uBACEqD,KAAK,8CACLd,aAAW,uBAEX,kBAAC,IAAD,CACEgD,MAAO,CAAEC,MAAO,WAChB1G,UAAU,qCCQX2G,GAhEO,WACpB,OACE,yBAAK3G,UAAU,OACb,kBAAC,IAAD,CAAQ4G,SAAUjG,OAChB,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkG,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,0BACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,oBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,yBAAK7G,UAAU,kBACb,yBAAKkC,GAAG,OAAOxB,IAAKC,iBACpB,wBAAIX,UAAU,oBAAd,mBACA,uBAAGA,UAAU,iBAAb,oCACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,0BACb,kBAACmF,EAAA,EAAD,CAASjE,MAAM,aACb,uBACEqD,KAAK,gCACLd,aAAW,qBAEX,yBACE/C,IAAKC,iBACLX,UAAU,6BACVuG,MAAO,GACPC,OAAQ,OAId,kBAACrB,EAAA,EAAD,CAASjE,MAAM,eACb,uBACEqD,KAAK,8CACLd,aAAW,uBAEX,kBAAC,IAAD,CACEgD,MAAO,CAAEC,MAAO,WAChB1G,UAAU,wCCpDZgE,QACW,cAA7B8C,OAAOhB,SAASiB,UAEe,UAA7BD,OAAOhB,SAASiB,UAEhBD,OAAOhB,SAASiB,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDgIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.c796a02c.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Nav.css\";\n\nconst Nav = () => {\n  return (\n    <nav className=\"home-nav\">\n      <NavLink to=\"/resume\" className=\"nav-link border-right\">resume</NavLink>\n      <NavLink to=\"/music\" className=\"nav-link border-right\">music</NavLink>\n      <NavLink to=\"/journal\" className=\"nav-link border-right\">journal</NavLink>\n      <NavLink to=\"/connect\" className=\"nav-link\">connect</NavLink>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React, { ReactComponentElement } from \"react\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport \"./Audio.scss\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport PauseCircleFilledIcon from \"@material-ui/icons/PauseCircleFilled\";\nimport Forward10Icon from \"@material-ui/icons/Forward10\";\nimport Replay10Icon from \"@material-ui/icons/Replay10\";\nimport \"./Music.css\";\n\nconst customIcons = {\n  play: <PlayCircleFilledIcon className=\"audio-button\" fontSize=\"large\" />,\n  pause: <PauseCircleFilledIcon className=\"audio-button\" fontSize=\"large\" />,\n  forward: <Forward10Icon className=\"audio-button\" fontSize=\"large\" />,\n  rewind: <Replay10Icon className=\"audio-button\" fontSize=\"large\" />,\n};\n\ninterface IAudio {\n  header: any;\n  year: number;\n  src: string\n}\n\nconst Audio = (props: IAudio) => {\n  return (\n    <AudioPlayer\n      src={process.env.PUBLIC_URL + props.src}\n      customIcons={customIcons}\n      className=\"audio-player\"\n      progressJumpStep={10000}\n      header={props.header}\n      footer={<p className=\"italics small story\">(event horizon - {props.year})</p>}\n    />\n  );\n};\n\nexport default Audio;\n","import React from \"react\";\nimport \"./Nav.css\";\nimport MetaTags from \"react-meta-tags\";\n\nimport Audio from \"./Audio\";\n\ninterface ITunes {\n  [key: string]: { title: string; story: string; src: string; year: number };\n}\n\nconst eventHorizonTunes: ITunes = {\n  main_theme: {\n    title: \"main theme\",\n    // story:\n    // \"We landed on Pitune's surface too late. Yago's ship had already been buried by the drifting ash. There must be another way to get to the data.\",\n    story: `We landed too late. Ash had buried Yago's ship.`,\n    src: \"/music/mainTheme.m4a\",\n    year: 2019,\n  },\n  firstGlimpse: {\n    title: \"first glimpse\",\n    story:\n      \"There's a charging station on Pitune's third moon. Maybe Yago docked there before landing on the planet's surface, and maybe on the way we'll see Novum: the black maw at the galaxy's center.\",\n    src: \"/music/firstGlimpse.m4a\",\n    year: 2019,\n  },\n  drifters: {\n    title: \"drifters\",\n    story:\n      \"Captain Uharo told us the last survey found living matter near the charging station, but our ship's scanners found nothing but debris. Our journey must continue.\",\n    src: \"/music/drifters.m4a\",\n    year: 2019,\n  },\n\n  intoTheMaw: {\n    title: \"into the M.A.W.\",\n    story:\n      \"A sudden gravitational rift has begun pulling us toward Novum. Our thrusters are firing at full capacity, but it may not be enough. We can't let our mission end. Not like this.\",\n    src: \"/music/intoTheMaw.m4a\",\n    year: 2019,\n  },\n  starbound: {\n    title: \"starbound\",\n    story: \"test\",\n    src: \"/music/starbound.m4a\",\n    year: 2019,\n  },\n  traitors: {\n    title: \"traitors\",\n    story: \"test\",\n    src: \"/music/traitors.m4a\",\n    year: 2020,\n  },\n  theJump: {\n    title: \"event horizon\",\n    story: \"test\",\n    src: \"/music/theJump.m4a\",\n    year: 2020,\n  },\n};\n\nconst createHeader = (tune: { title: string; story: string }) => {\n  return (\n    <>\n      <h2>{tune.title}</h2>\n      {/* <p className=\"italics small no-bottom-margin story\">{tune.story}</p> */}\n      <p className=\"italics small no-bottom-margin story\"></p>\n    </>\n  );\n};\n\nconst Music = () => {\n  const [selection, setSelection] = React.useState<\"event horizon\" | \"other\">(\n    \"event horizon\"\n  );\n\n  const eventHorizonArt = [\n    <img\n      id=\"astronaut\"\n      className={selection === \"event horizon\" ? \"fade-in-right\" : \"fade-out\"}\n      src={process.env.PUBLIC_URL + \"/art/astronaut.png\"}\n    />,\n    <img\n      className={selection === \"event horizon\" ? \"fade-in-left\" : \"fade-out\"}\n      id=\"planet\"\n      src={process.env.PUBLIC_URL + \"/art/planet.png\"}\n    />,\n    <img\n      className={selection === \"event horizon\" ? \"fade-in\" : \"fade-out\"}\n      id=\"ship\"\n      src={process.env.PUBLIC_URL + \"/art/ship.png\"}\n    />,\n    <img\n      className={selection === \"event horizon\" ? \"fade-in-left\" : \"fade-out\"}\n      id=\"astronaut2\"\n      src={process.env.PUBLIC_URL + \"/art/astronaut2.png\"}\n    />,\n  ];\n\n  let artInc = -1;\n  const mixedEventHorizonComponents = Object.keys(eventHorizonTunes).map(\n    (key, i) => {\n      if (i % 2 == 0) {\n        artInc++;\n        return (\n          <React.Fragment key={i}>\n            <Audio\n              header={createHeader(eventHorizonTunes[key])}\n              year={eventHorizonTunes[key].year}\n              src={process.env.PUBLIC_URL + eventHorizonTunes[key].src}\n            />\n            {eventHorizonArt[artInc]}\n          </React.Fragment>\n        );\n      }\n      return (\n        <Audio\n          header={createHeader(eventHorizonTunes[key])}\n          year={eventHorizonTunes[key].year}\n          src={process.env.PUBLIC_URL + eventHorizonTunes[key].src}\n          key={i}\n        />\n      );\n    }\n  );\n\n  const eventHorizonComponents = (\n    <div className=\"content-container\">{mixedEventHorizonComponents}</div>\n  );\n\n  const otherComponents = (\n    <p className=\"italics\">This stuff is still in the works.</p>\n  );\n\n  return (\n    <div className=\"container\">\n      <MetaTags>\n        <title>music : jackson prowell</title>\n        <meta name=\"description\" content=\"Check out some of my music.\"></meta>\n      </MetaTags>\n      <h1>music</h1>\n      <nav className=\"two-col-grid\">\n        <button\n          className={`nav-link button-link border-right ${\n            selection === \"event horizon\" && \"active-link\"\n          }`}\n          onClick={() => setSelection(\"event horizon\")}\n        >\n          event horizon\n        </button>\n        <button\n          className={`nav-link button-link no-border ${\n            selection === \"other\" && \"active-link\"\n          }`}\n          onClick={() => setSelection(\"other\")}\n        >\n          other\n        </button>\n      </nav>\n      {/* <div className=\"vertical-padding\"></div> */}\n      {selection === \"event horizon\" ? eventHorizonComponents : otherComponents}\n      <footer>\n        {selection === \"event horizon\" && (\n          <p className=\"italics small\">art made in blender.</p>\n        )}\n      </footer>\n    </div>\n  );\n};\n\nexport default Music;\n","import React from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport \"./Nav.css\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport MusicNoteIcon from \"@material-ui/icons/MusicNote\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport PeopleIcon from \"@material-ui/icons/People\";\n\nconst Header = () => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const location = useLocation();\n\n  if ((location.pathname === \"/\")) {\n    return <></>;\n  } else {\n    return (\n      <div className=\"header\">\n        <NavLink to=\"/\">\n          <img src={process.env.PUBLIC_URL + \"/logo.png\"} id=\"logo-small\" alt=\"jackson prowell logo\" />\n        </NavLink>\n        <nav className=\"float-right\" id=\"large-nav\">\n          <NavLink\n            to=\"/resume\"\n            className=\"nav-link border-right\"\n            activeClassName=\"active-link\"\n          >\n            resume\n          </NavLink>\n          <NavLink\n            to=\"/music\"\n            className=\"nav-link border-right\"\n            activeClassName=\"active-link\"\n          >\n            music\n          </NavLink>\n          <NavLink\n            to=\"/journal\"\n            className=\"nav-link border-right\"\n            activeClassName=\"active-link\"\n          >\n            journal\n          </NavLink>\n          <NavLink\n            to=\"/connect\"\n            className=\"nav-link\"\n            activeClassName=\"active-link\"\n          >\n            connect\n          </NavLink>\n        </nav>\n        <nav className=\"float-right\" id=\"small-nav\">\n          <IconButton\n            aria-label=\"see navigation menu\"\n            aria-controls=\"phone-menu\"\n            aria-haspopup=\"true\"\n            onClick={(e) => setAnchorEl(e.currentTarget)}\n          >\n            <MenuIcon fontSize=\"large\" />\n          </IconButton>\n          <Menu\n            id=\"phone-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <NavLink onClick={handleClose} to=\"/resume\" className=\"nav-link\">\n              <MenuItem>\n                <WorkIcon className=\"menu-icon sky-blue\" /> resume\n              </MenuItem>\n            </NavLink>\n            <NavLink onClick={handleClose} to=\"/music\" className=\"nav-link\">\n              <MenuItem>\n                <MusicNoteIcon className=\"menu-icon sky-blue\" /> music\n              </MenuItem>\n            </NavLink>\n            <NavLink onClick={handleClose} to=\"/journal\" className=\"nav-link\">\n              <MenuItem>\n                <DescriptionIcon className=\"menu-icon sky-blue\" /> journal\n              </MenuItem>\n            </NavLink>\n            <NavLink onClick={handleClose} to=\"/connect\" className=\"nav-link\">\n              <MenuItem>\n                <PeopleIcon className=\"menu-icon red\" /> connect\n              </MenuItem>\n            </NavLink>\n          </Menu>\n        </nav>\n      </div>\n    );\n  }\n};\n\nexport default Header;\n","import BarcodeDevLog from \"./BarcodeDevLog\";\n\nexport interface IEntry {\n  title: string,\n  photoPath: string,\n  photoAlt: string,\n  description: string,\n  content: any\n  id: string\n}\n\nexport const devLogEntries: IEntry[] = [\n  {\n    title: \"Making movie \\\"barcodes\\\"\",\n    description: \"Writing a python script that finds the color palettes of inputted movies\",\n    photoPath: process.env.PUBLIC_URL + \"/covers/barcode.jpg\",\n    photoAlt: \"the dominant color of each frame of a movie compressed into one image\",\n    content: BarcodeDevLog(),\n    id: \"d1\"\n  }\n]","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst BarcodeDevLog = () => {\n  return (\n    <div className=\"container\">\n      <p className=\"entry-content indent\">\n        After seeing an{\" \"}\n        <a\n          href=\"https://www.cartoonbrew.com/wp-content/uploads/2013/06/Bambi-1280x600.jpg\"\n          className=\"link\"\n        >\n          image of every frame of the movie <em>Bambi</em> compressed into one\n          long movie \"barcode\"\n        </a>\n        , I was inspired to make my own python script that, instead of\n        compressing each frame, finds the dominant color of each frame and\n        ouputs a dominant color timeline of an inputted movie.\n      </p>\n      <p className=\"entry-content indent\">\n        The first thing I had to figure out was how to read each frame of a\n        video file. After a few Google searches, I came across opencv-python,\n        the premier open-source computer vision library for python, and some{\" \"}\n        <a\n          href=\"https://stackoverflow.com/questions/51474421/extracting-frames-every-second-of-all-videos-in-folder\"\n          className=\"link\"\n        >\n          example code\n        </a>{\" \"}\n        that made use of opencv-python written by Stack Overflow user\n        Sparkiepandas. The example code demonstrated how to read 1 frame per\n        second of each frame in every video in a given directory, but I only\n        wanted to read frames from a single video file, so I made some quick\n        adjustments to the code, and started working on a test. I threw together\n        a python controller file that took a video file as an argument, and I\n        had the program save a copy of one frame per second of the inputted\n        video file.\n      </p>\n      <p className=\"entry-content indent\">\n        Now that I could read frames of video files, I had to find out how to\n        find the dominant color of an image in python. At first, I thought of\n        getting the average color of each pixel in the image, but I quickly\n        realized the average color wasn't really what I was looking for (let's\n        say that an image is three quarters red, and one quarter blue, the\n        average color would be a purplish red, but the most common color of the\n        image is red). Instead, I had to find out how to find the dominant color\n        (the most common color) in an image, so I got to researching finding\n        dominant colors of images in python and opencv, and I came across an{\" \"}\n        <a\n          href=\"https://adamspannbauer.github.io/2018/03/02/app-icon-dominant-colors/\"\n          className=\"link\"\n        >\n          article by Adam Spannbauer\n        </a>\n        about how to find the dominant color of an image with opencv-python. In\n        the article, Adam explains how{\" \"}\n        <a\n          href=\"https://en.wikipedia.org/wiki/K-means_clustering\"\n          className=\"link\"\n        >\n          k-means clustering\n        </a>{\" \"}\n        can be used to find the dominant color of a list of pixels. Essentially,\n        the program finds <em>k</em> mean colors, and then maps each pixel to\n        the closest mean, respresenting a{\" \"}\n        <a\n          href=\"https://en.wikipedia.org/wiki/Voronoi_diagram\"\n          className=\"link\"\n        >\n          voronoi diagram\n        </a> {' '}\n        of the <em>k</em> possible dominant colors. It then returns the most\n        popular mean as the dominant color.\n      </p>\n      <p className=\"entry-content indent\">\n        Finally, I had to put all of my research together. I updated the\n        controller file to include an argument for setting <em>k</em>, for\n        setting the interval that frames are read, for the width of the image to\n        be outputted, and for the height of the image to be outputted. Then, I\n        had to integrate the dominant color finding function into the main loop\n        so that the dominant color of the frame at the given frame interval\n        could be found, and I added a function for generating a new image of all\n        of the dominant colors with numpy at the end of the script. The last\n        polish I made was to add an option to also generate a\n        grayscale barcode. The dominant color function used the HSV color space,\n        so the alphas of the color were capture in the V (value). Knowing this,\n        I built a seperate function that generated a new barcode image using\n        only the V values of each HSV color. You can check out some of the\n        results{\" \"}\n        <NavLink to=\"/resume/barcode\" className=\"link\">\n          here\n        </NavLink>\n        .\n      </p>\n    </div>\n  );\n};\n\nexport default BarcodeDevLog;\n","import React from \"react\";\nimport \"./Nav.css\";\nimport \"./Journal.css\";\n\nimport { IEntry, devLogEntries } from \"./Entries/entries\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport MetaTags from \"react-meta-tags\";\n\nconst Journal = () => {\n  const [section, setSection] = React.useState<\"devLog\" | \"other\">(\"devLog\");\n\n  const { category, id } = useParams();\n\n  if (category && id) {\n    const entry = devLogEntries.find((movie) => movie.id === id);\n    return (\n      <div className=\"container\">\n        <img src={process.env.PUBLIC_URL + entry?.photoPath} className=\"banner\" alt={entry?.photoAlt} />\n        <h2>{entry?.title}</h2>\n        <p className=\"italics small\">{entry?.description}</p>\n        <div>{entry?.content}</div>\n      </div>\n    );\n  }\n\n  const devLogSection = (\n    <div className=\"covers-container\">\n      {devLogEntries.map((entry: IEntry) => (\n        <NavLink to={`/journal/devLog/${entry.id}`} className=\"cover col\" key={entry.title}>\n          <img src={process.env.PUBLIC_URL + entry.photoPath} className=\"cover-photo\" alt={entry.title} />\n          <h3 className=\"cover-title\">{entry.title}</h3>\n          <p className=\"italics small cover-description\">{entry.description}</p>\n        </NavLink>\n      ))}\n    </div>\n  );\n\n  return (\n    <div className=\"container\">\n      <MetaTags>\n        <title>journal : jackson prowell</title>\n        <meta name=\"description\" content=\"Some dev logs, research, and ideas that I want to share.\"></meta>\n      </MetaTags>\n      <h1>journal</h1>\n      <nav className=\"two-col-grid\">\n        <button\n          className={`nav-link button-link border-right ${\n            section === \"devLog\" && \"active-link\"\n          }`}\n          onClick={() => setSection(\"devLog\")}\n        >\n          dev log\n        </button>\n        <button\n          className={`nav-link button-link no-border ${\n            section === \"other\" && \"active-link\"\n          }`}\n          onClick={() => setSection(\"other\")}\n        >\n          other\n        </button>\n      </nav>\n      {section === \"devLog\" ? (\n        devLogSection\n      ) : (\n        <p className=\"italics\">This stuff is still in the works</p>\n      )}\n    </div>\n  );\n};\n\nexport default Journal;\n","import React from \"react\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { Tooltip, IconButton } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Encryptor = () => {\n  return (\n    <div className=\"container\">\n      <Tooltip title=\"Back to virtual resume\">\n        <NavLink to=\"/resume\" className=\"link\">\n          <IconButton>\n            <ArrowBackIosIcon />\n          </IconButton>\n        </NavLink>\n      </Tooltip>\n      <h1>Encryptor</h1>\n\n      <p className=\"italics no-top-margin\">Made in 2012</p>\n      <p className=\"description indent margin-top\">\n        In 2012, I found out about a website called Codecademy. It came out in\n        the later months of 2011, and by the time I started using it, it already\n        had{\" \"}\n        <a\n          href=\"https://www.forbes.com/sites/jjcolao/2012/03/22/codecademy/#7cea6f743c6d\"\n          className=\"link\"\n        >\n          over 400,000 users{\" \"}\n        </a>\n        and a large collection of Javascript, HTML, and CSS lessons.\n      </p>\n      <p className=\"description indent\">\n        I was enchanted by the Javascript language and the programming concepts\n        that came with it. I had never been exposed to so much problem solving,\n        and I fell in love with it instantly. After learning some more, I wanted\n        to use what I knew to make something that was my own.\n      </p>\n      <p className=\"description indent\">\n        At the time, I was 11, and being an 11 year old meant that there was an\n        obvious project to work on: a tool that could make secret codes for my\n        friends and I. I used the few programming skills I had to write up a\n        basic substition cipher implementation. The result was a terrifying mess\n        of if statements and a few for loops wrapped up in a \"cool\" black and\n        green web page that looked like it was taken straight out of{\" \"}\n        <a\n          href=\"https://assets.newatlas.com/dims4/default/f50e92b/2147483647/strip/true/crop/1182x788+98+0/resize/1200x800!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Farchive%2Fhollywood-hacking-2000s-4.png\"\n          className=\"link\"\n        >\n          Swordfish.\n        </a>{\" \"}\n        Check it out:\n      </p>\n      <div className=\"iframe-container\">\n        <iframe src=\"https://jacogrande.github.io/encryptor/index.html\"></iframe>\n      </div>\n    </div>\n  );\n};\n\nexport default Encryptor;\n","import React from \"react\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { Tooltip, IconButton } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Pie = () => (\n  <div className=\"container\">\n    <Tooltip title=\"Back to virtual resume\">\n      <NavLink to=\"/resume\" className=\"link\">\n        <IconButton>\n          <ArrowBackIosIcon />\n        </IconButton>\n      </NavLink>\n    </Tooltip>\n    <h1>PiE Robotics</h1>\n    <p className=\"italics no-top-margin\">2016</p>\n    <p className=\"description indent margin-top\">\n      In my freshman year of highschool, I was invited to be part of the\n      school's robotics team that competed in the{\" \"}\n      <a href=\"https://pioneers.berkeley.edu/\" className=\"link\">\n        PiE robotics{\" \"}\n      </a>{\" \"}\n      league: a competition held by a group of UC Berkeley engineering students.{\" \"}\n      The robots had to navigate an arena with a 4'x4' ball pit at its center,\n      picking up and sorting all sorts of balls along the way. The goal was to\n      have the robot sort tennis balls from plastic balls and then sort tennis\n      balls with pieces of metal in them from normal tennis balls.\n    </p>\n    <p className=\"description indent\">\n      I was one of two programmers on the team, and it was my responsibility to\n      program functionality for the ideas that the team came up with. The robot was\n      controlled by an Arduino that we could ssh into and load our updated code\n      onto. My first task as one of the team's programmers was to write a script\n      that took XBox controller input and mapped it to control the two motors\n      that were geared to the robot's treads. I used a python3 library called\n      xbox360controller for receiving controller inputs.\n    </p>\n    <p className=\"description indent\">\n      The competition was split up into two sections: The driver section where a\n      team member had to control the robot and race other teams to pick up the\n      most tennis balls and an autonomous section where robots would have t to\n      autonomously pick up as many balls as possible. I was in charge of\n      programming the robot's autonomous capabilities. The challenge was that\n      all of the tennis balls were placed on a long line of white tape, so our\n      robot needed to be capable of autonomously following a line of tape on the ground. Our\n      solution was to put three light sensors on the bottom of the robot chassis\n      so that it could tell where the line of tape was. I programmed a\n      conditional into the robot's game loop that would turn the chassis if the\n      line of tape (or the higher light value) touched one of the sensors beside\n      the middle sensor.\n    </p>\n    <p className=\"description indent\">\n      The team worked tirelessly, sometimes staying at school until midnight, to\n      finish our robot in the three months that we had. All of that effort paid\n      off, however, on the day of the competition. We got off to a rocky start\n      when the servo motor that released our stored tennis balls broke\n      mid-match, but after some quick fixes, we got the robot back up and\n      running, eventually making it to the finals and taking home the\n      championship trophy.\n    </p>\n  </div>\n);\n\nexport default Pie;\n","import React from \"react\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { Tooltip, IconButton } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nconst FB = () => (\n  <div className=\"container\">\n    <Tooltip title=\"Back to virtual resume\">\n      <NavLink to=\"/resume\" className=\"link\">\n        <IconButton>\n          <ArrowBackIosIcon />\n        </IconButton>\n      </NavLink>\n    </Tooltip>\n    <h1>FB Cleaner</h1>\n    <p className=\"italics no-top-margin\">Made in 2017</p>\n    <p className=\"description indent margin-top\">\n      In 2017, Facebook was starting to earn its reputation as a platform that\n      mishandled user data. Prior to the Cambridge Analytica scandal, the\n      pressing issue was that Facebook would save user data even after users\n      delete their accounts, and the only way to stop them from doing so was to\n      manually delete all of your account's post, comment, and like history.\n    </p>\n    <p className=\"description indent\">\n      The fix was simple: automate the process. I thought, \"Hey, why would I\n      spend 10 minutes doing something boring when I could spend 10 hours making\n      something that does it for me?\". I got to work building a web scraping\n      chrome extension that would click the appropriate buttons on a user's\n      activity page to delete all of their Facebook activiy. The program itself\n      wasn't anything too fancy. I didn't touch any computer vision models or\n      anything, instead, I just had the extension's content script find the\n      appropriate buttons by their class names and ids. This made the project\n      easy to make, but it lead to its deprecation as soon as Facebook updated\n      its front end.\n    </p>\n  </div>\n);\n\nexport default FB;\n","import React from \"react\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { Tooltip, IconButton } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Aesap = () => (\n  <div className=\"container\">\n    <Tooltip title=\"Back to virtual resume\">\n      <NavLink to=\"/resume\" className=\"link\">\n        <IconButton>\n          <ArrowBackIosIcon />\n        </IconButton>\n      </NavLink>\n    </Tooltip>\n    <h1>Aesap</h1>\n    <p className=\"italics no-top-margin\">Made in 2017</p>\n    <p className=\"description indent margin-top\">\n      In 2017, I got some work developing a chatbot for slack. The purpose of\n      the bot was to provide more visibility to blocker bug tickets submitted to\n      JIRA. I partnered up with my brother Phaedrus to get some help integrating\n      the different APIs involved.\n    </p>\n    <p className=\"description indent\">\n      Building the chatbot exposed me to the world of APIs. We integrated API.AI\n      (now Dialog Flow) in order to match user input to intents, JIRA REST API\n      to listen for blocker bug tickets, and Twilio to notify developers when\n      blocker bugs were found. This was also one of my first times collaborating\n      on a serious project, and I felt that it was my responsibility to start learning\n      how to write clean, legible, and efficient code.\n    </p>\n  </div>\n);\n\nexport default Aesap;\n","import React from \"react\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { Tooltip, IconButton } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Pokemon = () => (\n  <div className=\"container\">\n    <Tooltip title=\"Back to virtual resume\">\n      <NavLink to=\"/resume\" className=\"link\">\n        <IconButton>\n          <ArrowBackIosIcon />\n        </IconButton>\n      </NavLink>\n    </Tooltip>\n    <h1>Pokemon Rocket</h1>\n    <p className=\"italics no-top-margin\">Made in 2018</p>\n    <p className=\"description indent margin-top\">\n      I had always wanted to play a pokemon game where your character starts off\n      as a member of Team Rocket. I think having the main character start off in\n      a typical antagonist role lends itself to better{\" \"}\n      <a\n        href=\"https://www.britannica.com/art/tragedy-literature/Theory-of-tragedy\"\n        className=\"link\"\n      >\n        story.\n      </a>\n      I figured that it would be a fun project to try and make an original\n      Pokemon replica in order to develop this game, so I got to work.\n    </p>\n    <p className=\"description indent\">\n      My first step was picking the technologies I was going to use. At this\n      point in time, I was proficient in Javascript, and I had dabbled in HTML5\n      Canvas, so I decided to go with those. I started by writing a script that\n      generated a traversable map of randomly colored tiles, and then I built on\n      that script, adding support for reading and displaying sprites from an\n      image file and reading a custom drawn game map file that consisted of\n      tiles representing which sprites to display. The result looked like this:\n    </p>\n    <img\n      src={process.env.PUBLIC_URL + \"/covers/pokemon-map.png\"}\n      className=\"project-image\"\n      alt=\"Pokemon Rocket rendered game map\"\n    />\n    <p className=\"description indent margin-top\">\n      To improve the look of the game engine's map system, I had to add animated\n      tiles. These map tiles iterate through an array of sprites after every few{\" \"}\n      <a href=\"https://en.wikipedia.org/wiki/Delta_timing\" className=\"link\">\n        ticks\n      </a>\n      , creating a consistently timed animation. Check it out:\n    </p>\n    <img\n      src={process.env.PUBLIC_URL + \"/covers/pokemon-animated.gif\"}\n      className=\"project-image\"\n      alt=\"Animations in Pokemon Rocket\"\n    />\n    <p className=\"description indent margin-top\">\n      The game map, or tilemap, was stored as a two dimensional array of sprite\n      and animated sprite objects, but the tilemap was also mapped to a\n      permission map, a two dimensional array that would track the player's\n      position and check for movement boundaries. Working on this project made\n      me spend a lot of time getting comfortable with more complicated data\n      types.\n    </p>\n    <img\n      src={process.env.PUBLIC_URL + \"/covers/pokemon-movement.gif\"}\n      className=\"project-image\"\n      alt=\"Trying to move into bondaries in Pokemon Rocket\"\n    />\n    <p className=\"description indent margin-top\">\n      The last feature I implemented was a settings menu. The player could pause\n      the game and look at their inventory, pokemon, and more.\n    </p>\n    <img\n      src={process.env.PUBLIC_URL + \"/covers/pokemon-menu.gif\"}\n      className=\"project-image\"\n      alt=\"Pokemon Rocket game menu\"\n    />\n    <p className=\"description indent margin-top\">\n      After 4 months of work and a codebase that was growing larger and more\n      cluttered, finishing the game by myself proved too daunting of a task, but\n      I had taken so much away from working on the game engine. Pokemon Rocket\n      was the first project that I worked on consistently for a few hours a day,\n      and that constant practice led those 4 months to be one of the most\n      educational time periods in my experience programming. I learned how and\n      when to implement efficient object oriented techniques in Javascript, I\n      designed modular code for a clean and organized codebase, and I refined my\n      knowledge of programming fundamentals.\n    </p>\n  </div>\n);\n\nexport default Pokemon;\n","import React from \"react\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { Tooltip, IconButton } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Hashbrowns = () => (\n  <div className=\"container\">\n    <Tooltip title=\"Back to virtual resume\">\n      <NavLink to=\"/resume\" className=\"link\">\n        <IconButton>\n          <ArrowBackIosIcon />\n        </IconButton>\n      </NavLink>\n    </Tooltip>\n    <h1>Hashbrowns</h1>\n    <p className=\"italics no-top-margin\">Made in 2018</p>\n    <p className=\"description indent margin-top\">\n      In 2018, I wanted to learn more about user data security. I had already{\" \"}\n      <a\n        href=\"https://www.coursera.org/account/accomplishments/records/JEWD9LW8N9XL\"\n        className=\"link\"\n      >\n        learned the basics{\" \"}\n      </a>{\" \"}\n      of user authentication with JSON web tokens, but I wanted to do a deeper\n      dive into data security. After researching popular hashing algorithms, I wrote a bash script implementation of SHA-1 that was based on Wikipedia's{\" \"}\n      <a\n        href=\"https://en.wikipedia.org/wiki/SHA-1#SHA-1_pseudocode\"\n        className=\"link\"\n      >\n        pseudocode\n      </a>\n      . Following each step of a hashing algorithm helped me understand the operations that make hashes work.\n    </p>\n  </div>\n);\n\nexport default Hashbrowns;\n","import React from \"react\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { Tooltip, IconButton } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nconst KTM = () => (\n  <div className=\"container\">\n    <Tooltip title=\"Back to virtual resume\">\n      <NavLink to=\"/resume\" className=\"link\">\n        <IconButton>\n          <ArrowBackIosIcon />\n        </IconButton>\n      </NavLink>\n    </Tooltip>\n    <h1>Kitchen Table Magic</h1>\n    <p className=\"italics no-top-margin\">Made in 2020</p>\n    <p className=\"description indent margin-top\">\n      When San Francisco was told to shelter in place, my brothers and I wanted\n      to find a way to keep playing Magic: The Gathering, our favorite trading\n      card game. There were some online versions of the game, but none of them\n      had the simplicity and control that we wanted, so we decided to make our\n      own. We got to work building a site with a Typescript / React front-end\n      and a Node.js / Express back-end.\n    </p>\n    <p className=\"description indent\">\n      I was in charge of building and configuring the backend API and MongoDB\n      database to support user authentication and deck building. I set up API\n      endpoints to authenticate users using Passport.js, and I built custom\n      deckbuilding functionality with the Scryfall API to fetch card data that\n      wasn't on the local database. This is what the deck building process\n      looked like:\n    </p>\n    <img\n      src={process.env.PUBLIC_URL + \"/covers/deck-builder.png\"}\n      className=\"project-image\"\n      alt=\"Kitchen Table Magic's deck builder interface\"\n    />\n    <img\n      src={process.env.PUBLIC_URL + \"/covers/deck.png\"}\n      className=\"project-image\"\n      alt=\"Kitchen Table Magic's deck viewer interface\"\n    />\n    <p className=\"description indent margin-top\">\n      It was also my responsibility to design a socket system with Socket.io to\n      manage game lobbies and user communication. This was my first time working\n      with sockets, and I learned a lot about real time communication between\n      multiple seperate clients while working on this project. Here's what game\n      lobbies looked like:\n    </p>\n    <img\n      src={process.env.PUBLIC_URL + \"/covers/game-lobby.png\"}\n      className=\"project-image\"\n      alt=\"Kitchen Table Magic's game lobby interface\"\n    />\n  </div>\n);\n\nexport default KTM;\n","import React from \"react\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { Tooltip, IconButton } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Barcode = () => (\n  <div className=\"container\">\n    <Tooltip title=\"Back to virtual resume\">\n      <NavLink to=\"/resume\" className=\"link\">\n        <IconButton>\n          <ArrowBackIosIcon />\n        </IconButton>\n      </NavLink>\n    </Tooltip>\n    <h1>Barcode</h1>\n\n    <p className=\"italics no-top-margin\">Made in 2020</p>\n    <p className=\"description indent margin-top\">\n      At some point in July, 2020, I saw this photo:\n    </p>\n    <img\n      src=\"https://www.cartoonbrew.com/wp-content/uploads/2013/06/Bambi-1280x600.jpg\"\n      className=\"project-image\"\n    />\n    <p className=\"description indent margin-top\">\n      It's an image that consists of every single frame in the movie{\" \"}\n      <em>Bambi</em> compressed into one long line. I was immediately inspired\n      by the colors in the image, but I disliked how there was vertical\n      gradation within each frame. Instead, I wanted to only see the dominant\n      color of each frame, so I got to work building my own color barcode\n      generator.\n    </p>\n    <p className=\"description indent\">\n      I built the program using python3, opencv-python, sklearn, and numpy. In\n      the process, I learned all about{\" \"}\n      <a\n        href=\"https://en.wikipedia.org/wiki/K-means_clustering\"\n        className=\"link\"\n      >\n        k-means clustering\n      </a>{\" \"}\n      in order to find dominant colors, and I got to work on my python3 chops.\n      You can see my dev log for the project{\" \"}\n      <NavLink to=\"/journal/devLog/d1\" className=\"link\">\n        here\n      </NavLink>\n      . Check out some of my favorite movie barcodes generated with the script:\n    </p>\n    <img\n      src={process.env.PUBLIC_URL + \"/covers/barcode.jpg\"}\n      className=\"project-barcode\"\n      alt=\"Fantastic Planet barcode\"\n    />\n    <p className=\"description italics\">\n      René Laloux's classic animated science fiction film \"Fantastic Planet\"\n    </p>\n    <img\n      src={process.env.PUBLIC_URL + \"/covers/barcodes/treeOfLife.jpg\"}\n      className=\"project-barcode\"\n      alt=\"Tree of Life barcode\"\n    />\n    <p className=\"description italics\">\n      Terrence Malick's very green epic \"Tree of Life\"\n    </p>\n    <img\n      src={process.env.PUBLIC_URL + \"/covers/barcodes/starWars.jpg\"}\n      className=\"project-barcode\"\n      alt=\"Star Wars: A New Hope barcode\"\n    />\n    <img\n      src={process.env.PUBLIC_URL + \"/covers/barcodes/starWarsGray.jpg\"}\n      className=\"project-barcode\"\n      alt=\"Star Wars: A New Hope barcode in grayscale\"\n    />\n    <p className=\"description italics\">\n      \"Star Wars: A New Hope\" in color and in grayscale.\n    </p>\n    <img\n      src={process.env.PUBLIC_URL + \"/covers/barcodes/bladeRunner.jpg\"}\n      className=\"project-barcode\"\n      alt=\"Blade Runner: 2049 barcode\"\n    />\n    <p className=\"description italics\">\n      Denis Villeneuve's visually stunning \"Blade Runner: 2049\"\n    </p>\n  </div>\n);\n\nexport default Barcode;\n","import React from \"react\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { Tooltip, IconButton } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Intake = () => (\n  <div className=\"container\">\n    <Tooltip title=\"Back to virtual resume\">\n      <NavLink to=\"/resume\" className=\"link\">\n        <IconButton>\n          <ArrowBackIosIcon />\n        </IconButton>\n      </NavLink>\n    </Tooltip>\n    <h1>Intake</h1>\n\n    <p className=\"italics no-top-margin\">Made in 2020</p>\n    <p className=\"description indent margin-top\">\n      One of my 2020 new years resolutions was to watch a movie every other day\n      for the entire year, and to fulfill that resolution I had to find a way to\n      track the movies I watched. I tried logging my progress a few different\n      ways, but none of them really worked for me. I needed something that was\n      as easy to use as a notepad and more granular than platforms that offer a\n      rating system based on only 5 stars. I also wanted to gather statistics on\n      the movies I was watching to find out what themes I was drawn to, what\n      genres I watched the most, and more.\n    </p>\n    <p className=\"description indent\">\n      I was inspired to design and build my own platform for logging the movies\n      I was watching, and I was confident that I had the skills to build the\n      site. I prototyped the site in 7 days using Node.js and Express.js for the\n      back-end, Passport.js for user authentication, MongoDB and Mongoose for\n      the database, and EJS, HTML5, and CSS for the front-end. By the end of the\n      week, I had a working demo that allowed users to add movies to their\n      accounts, and the site would automatically generate statistics based on\n      the inputted movies.\n    </p>\n    <p className=\"description indent\">\n      Over the next few months, I worked daily on building out the platform's\n      features. I rebuilt the front end using Typescript and React.js with Redux\n      and React-router, I implemented email verification using SendGrid, I\n      worked with JSON Web Tokens for the password reset process, I turned the\n      back-end into a clean and RESTful API server that is optimized for\n      efficient data manipulation, I implemented SEO best practices, and I\n      designed a mobile version of the site using CSS media queries. The final\n      result is a fully functional online platform that is starting to gain new\n      users. Check it out at{\" \"}\n      <a href=\"https://www.intake.space\" className=\"link\">\n        intake.space\n      </a>\n    </p>\n  </div>\n);\n\nexport default Intake;\n","import React from \"react\";\nimport \"./Resume.css\";\nimport LineTo from \"react-lineto\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport Encryptor from \"./ResumeComponents/Encryptor\";\nimport Pie from \"./ResumeComponents/Pie\";\nimport FB from \"./ResumeComponents/FB\";\nimport Aesap from \"./ResumeComponents/Aesap\";\nimport Pokemon from \"./ResumeComponents/Pokemon\";\nimport Hashbrowns from \"./ResumeComponents/Hashbrowns\";\nimport KTM from \"./ResumeComponents/KTM\";\nimport Barcode from \"./ResumeComponents/Barcode\";\nimport Intake from \"./ResumeComponents/Intake\";\nimport MetaTags from \"react-meta-tags\";\n\ninterface IResumeData {\n  title: string;\n  description?: string;\n  image?: string;\n  location: \"left\" | \"middle\" | \"right\";\n  href?: string;\n}\n\nconst resumeData: IResumeData[] = [\n  {\n    title: \"Encryptor (2012)\",\n    description: \"My first programming project\",\n    image: \"/covers/encryptor.png\",\n    location: \"left\",\n    href: \"/resume/encryptor\",\n  },\n  {\n    title:\n      \"I spent my first few years learning fundamentals through Codecademy's Javascript, HTML, and CSS courses.\",\n    location: \"middle\",\n  },\n  {\n    title: \"PiE Robotics (2016)\",\n    description: \"Programmer on the 2016 PiE Robotics championship team.\",\n    image: \"/covers/pie.png\",\n    location: \"right\",\n    href: \"/resume/pie\",\n  },\n  {\n    title:\n      \"I started homeschooling my sophomore year of highshool, and I had a lot more time to refine my coding skills.\",\n    location: \"middle\",\n  },\n  {\n    title: \"FB Cleaner (2017)\",\n    description:\n      \"[Deprecated] Chrome extension that deletes all of a user's facebook data.\",\n    image: \"/covers/fb.png\",\n    location: \"left\",\n    href: \"/resume/fb\",\n  },\n  {\n    title: \"Aesap (2017)\",\n    description: \"Chatbot for slack.\",\n    image: \"/covers/aesap.png\",\n    location: \"middle\",\n    href: \"/resume/aesap\",\n  },\n  {\n    title: \"Pokemon Rocket (2018)\",\n    description: \"Homemade Pokemon game engine.\",\n    image: \"/covers/pokemon.png\",\n    location: \"right\",\n    href: \"/resume/pokemon\",\n  },\n  {\n    title: \"Hashbrowns (2018)\",\n    description: \"GNU Bash SHA-1 implementation.\",\n    image: \"/covers/hashbrowns.png\",\n    location: \"middle\",\n    href: \"/resume/hashbrowns\",\n  },\n  {\n    title:\n      \"In 2018 I enrolled at City College of San Francisco as a Computer Science major, and I spent the next two years taking computer science classes.\",\n    location: \"left\",\n  },\n  {\n    title: \"Kitchen Table Magic (2020)\",\n    description: \"A digital platform for playing Magic: The Gathering\",\n    image: \"/covers/ktm.png\",\n    location: \"middle\",\n    href: \"/resume/ktm\"\n  },\n  {\n    title: \"Barcode (2020)\",\n    description:\n      \"A python script that generates color barcodes for video files.\",\n    image: \"/covers/barcode.jpg\",\n    location: \"right\",\n    href: \"/resume/barcode\",\n  },\n  {\n    title: \"Intake (2020)\",\n    description: \"A platform for tracking media consumption.\",\n    image: \"/covers/intake.png\",\n    location: \"middle\",\n    href: \"/resume/intake\",\n  },\n];\n\nconst Resume = () => {\n  const { project } = useParams();\n\n  const getProject = () => {\n    switch (project) {\n      case \"encryptor\":\n        return <Encryptor />;\n      case \"pie\":\n        return <Pie />;\n      case \"fb\":\n        return <FB />\n      case \"aesap\":\n        return <Aesap />\n      case \"pokemon\":\n        return <Pokemon />\n      case \"hashbrowns\":\n        return <Hashbrowns />\n      case \"ktm\":\n        return <KTM />\n      case \"barcode\":\n        return <Barcode />\n      case \"intake\":\n        return <Intake />\n    }\n    \n  }\n  if (project) return (\n    <>\n      <MetaTags>\n        <title>{project} : jackson prowell</title>\n        <meta name=\"description\" content=\"Check out one of my projects.\"></meta>\n      </MetaTags>\n      {getProject()}\n    </>\n  )\n    \n\n  return (\n    <div className=\"container\">\n      <MetaTags>\n        <title>resume : jackson prowell</title>\n        <meta name=\"description\" content=\"See my project portfolio.\"></meta>\n      </MetaTags>\n      <h1>virtual resume</h1>\n      {resumeData.map((node, i) => (\n        <div className={node.location} key={node.title}>\n          {node.description ? (\n            <div className=\"node-container\">\n              <NavLink to={node.href as string}>\n                <div className={`node node${i}`}>\n                  <img src={process.env.PUBLIC_URL + node.image} alt={node.title} />\n                </div>\n              </NavLink>\n              <p className=\"no-bottom-margin\">{node.title}</p>\n              <p className=\"italics no-top-margin\">{node.description}</p>\n            </div>\n          ) : (\n            <div className={`node text-node node${i}`}>\n              <p>{node.title}</p>\n            </div>\n          )}\n          {i > 0 && (\n            <LineTo\n              from={`node${i - 1}`}\n              to={`node${i}`}\n              borderColor=\"#A8DADC\"\n              delay={0}\n              className=\"lines\"\n            />\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Resume;\n","import React from \"react\";\nimport \"./Nav.css\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Connect.css\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport { Tooltip } from \"@material-ui/core\";\nimport MetaTags from \"react-meta-tags\";\n\nconst Connect = () => {\n  return (\n    <div className=\"container\">\n      <MetaTags>\n        <title>connect : jackson prowell</title>\n        <meta name=\"description\" content=\"Connect with me for professional services in web development and music.\"></meta>\n      </MetaTags>\n      <h1>connect</h1>\n      <p className=\"indent description\">\n        Hi! I'm <b>Jackson Prowell</b> - UCLA student, web developer, software\n        tinkerer, musician, and all around curious person. I've been learning\n        web development through building projects for 7+ years, and I'm looking\n        to finally translate my skills to a professional environment.\n      </p>\n      <p className=\"indent description\">\n        <b>Web Development:</b> I'm skilled in Javascript/Typescript\n        technologies, specifically the MERN (MongoDB, Express, React, Node.js)\n        stack. Over my years programming, I've picked up on some other languages\n        and technologies, including python, bootstrap, and java. (Check out some\n        of my work{\" \"}\n        <NavLink className=\"link\" to=\"/resume\">\n          here\n        </NavLink>\n        .) If you need some web development work done, send me an email and\n        we'll talk.\n      </p>\n      <p className=\"indent description\">\n        <b>Music:</b> I grew up playing the drums, eventually picking up guitar\n        along the way. Now, I'll play any instrument I can get my hands on, and\n        I can proficiently mix them all together in Logic Pro. Feel free to\n        shoot me an email if you want to collaborate or need some\n        soundtrack work done.\n      </p>\n      <div className=\"connect-footer\">\n        <p className=\"inline-flex\">\n          <MailIcon className=\"icon\" />\n          prowelljackson@gmail.com\n        </p>\n        <div>\n          <Tooltip title=\"my github\">\n            <a\n              href=\"https://github.com/jacogrande\"\n              aria-label=\"link to my github\"\n            >\n              <img\n                src={process.env.PUBLIC_URL + \"/github.png\"}\n                className=\"social-icon cursor-pointer\"\n                width={20}\n                height={20}\n                alt=\"github logo\"\n              />\n            </a>\n          </Tooltip>\n          <Tooltip title=\"my linkedin\">\n            <a\n              href=\"https://www.linkedin.com/in/jackson-prowell\"\n              aria-label=\"link to my linkedin\"\n            >\n              <LinkedInIcon\n                style={{ color: \"#0077b5\" }}\n                className=\"social-icon icon-bump-down\"\n              />\n            </a>\n          </Tooltip>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Connect;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport { Tooltip } from \"@material-ui/core\";\n\nimport Nav from \"./Nav\";\nimport Music from \"./Music\";\nimport Header from \"./Header\";\nimport Journal from \"./Journal\";\nimport Resume from \"./Resume\";\nimport Connect from \"./Connect\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Header />\n        <Switch>\n          <Route path=\"/music\">\n            <Music />\n          </Route>\n          <Route path=\"/journal/:category/:id\">\n            <Journal />\n          </Route>\n          <Route path=\"/journal\">\n            <Journal />\n          </Route>\n          <Route path=\"/resume/:project\">\n            <Resume />\n          </Route>\n          <Route path=\"/resume\">\n            <Resume />\n          </Route>\n          <Route path=\"/connect\">\n            <Connect />\n          </Route>\n          <Route path=\"/\">\n            <div className=\"home-container\">\n              <img id=\"logo\" src={process.env.PUBLIC_URL + \"/boat.jpg\"} />\n              <h1 className=\"no-bottom-margin\">jackson prowell</h1>\n              <p className=\"italics small\">web developer / general tinkerer</p>\n              <Nav />\n              <div className=\"inline-flex margin-top\">\n                <Tooltip title=\"my github\">\n                  <a\n                    href=\"https://github.com/jacogrande\"\n                    aria-label=\"link to my github\"\n                  >\n                    <img\n                      src={process.env.PUBLIC_URL + \"/github.png\"}\n                      className=\"social-icon cursor-pointer\"\n                      width={20}\n                      height={20}\n                    />\n                  </a>\n                </Tooltip>\n                <Tooltip title=\"my linkedin\">\n                  <a\n                    href=\"https://www.linkedin.com/in/jackson-prowell\"\n                    aria-label=\"link to my linkedin\"\n                  >\n                    <LinkedInIcon\n                      style={{ color: \"#0077b5\" }}\n                      className=\"social-icon icon-bump-down\"\n                    />\n                  </a>\n                </Tooltip>\n              </div>\n            </div>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}